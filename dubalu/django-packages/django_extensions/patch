From 04f9216c756ddbd371441b84579505b6a6ac798c Mon Sep 17 00:00:00 2001
From: "German M. Bravo" <german.mb@deipi.com>
Date: Sat, 10 Nov 2012 11:01:31 -0600
Subject: [PATCH] Allow wildcards for excluded/included models and columns

---
 django-packages/django_extensions/management/modelviz.py | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/django-packages/django_extensions/management/modelviz.py b/django-packages/django_extensions/management/modelviz.py
index 1d18d16972c7b1bfbd9c0bd2d88828a3d011ce21..37f4e62827c5d0b318ae1c0725bbad22b7edad26 100644
--- a/django-packages/django_extensions/management/modelviz.py
+++ b/django-packages/django_extensions/management/modelviz.py
@@ -20,6 +20,7 @@ __contributors__ = [
     "Joern Hees <gitdev@joernhees.de>",
 ]
 
+import re
 import os
 
 from django.utils.translation import activate as activate_language
@@ -98,6 +99,9 @@ def generate_dot(app_labels, **kwargs):
         abstract_models = list(set(abstract_models))  # remove duplicates
         appmodels = abstract_models + appmodels
 
+        exclude_models = exclude_models and [re.compile('^%s$' % m.replace('*', '.*').replace('?', '.')) for m in exclude_models]
+        include_models = include_models and [re.compile('^%s$' % m.replace('*', '.*').replace('?', '.')) for m in include_models]
+
         for appmodel in appmodels:
             appmodel_abstracts = [abstract_model.__name__ for abstract_model in appmodel.__bases__ if hasattr(abstract_model, '_meta') and abstract_model._meta.abstract]
 
@@ -121,9 +125,9 @@ def generate_dot(app_labels, **kwargs):
 
             # consider given model name ?
             def consider(model_name):
-                if exclude_models and model_name in exclude_models:
+                if exclude_models and any(m.match(model_name) for m in exclude_models):
                     return False
-                return not include_models or model_name in include_models
+                return not include_models or any(m.match(model_name) for m in include_models)
 
             if not consider(appmodel._meta.object_name):
                 continue

From 3561bb4215b976ebf63df7205c4c6e93c1f82f45 Mon Sep 17 00:00:00 2001
From: "German M. Bravo" <german.mb@deipi.com>
Date: Sat, 10 Nov 2012 11:06:47 -0600
Subject: [PATCH] Allow wildcards for columns

---
 django-packages/django_extensions/management/modelviz.py | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/django-packages/django_extensions/management/modelviz.py b/django-packages/django_extensions/management/modelviz.py
index 37f4e62827c5d0b318ae1c0725bbad22b7edad26..2773a7db75e19dedadc83cfa44d3d9c9ce6850af 100644
--- a/django-packages/django_extensions/management/modelviz.py
+++ b/django-packages/django_extensions/management/modelviz.py
@@ -59,12 +59,15 @@ def generate_dot(app_labels, **kwargs):
     exclude_columns = parse_file_or_list(kwargs.get('exclude_columns', ""))
     exclude_models = parse_file_or_list(kwargs.get('exclude_models', ""))
 
+    exclude_columns = exclude_columns and [re.compile('^%s$' % m.replace('*', '.*').replace('?', '.')) for m in exclude_columns]
+    exclude_models = exclude_models and [re.compile('^%s$' % m.replace('*', '.*').replace('?', '.')) for m in exclude_models]
+    include_models = include_models and [re.compile('^%s$' % m.replace('*', '.*').replace('?', '.')) for m in include_models]
+
     def skip_field(field):
         if exclude_columns:
-            if verbose_names and field.verbose_name:
-                if field.verbose_name in exclude_columns:
-                    return True
-            if field.name in exclude_columns:
+            if verbose_names and field.verbose_name and any(m.match(field.verbose_name) for m in exclude_columns):
+                return True
+            if any(m.match(field.name) for m in exclude_columns):
                 return True
         return False
 
@@ -99,9 +102,6 @@ def generate_dot(app_labels, **kwargs):
         abstract_models = list(set(abstract_models))  # remove duplicates
         appmodels = abstract_models + appmodels
 
-        exclude_models = exclude_models and [re.compile('^%s$' % m.replace('*', '.*').replace('?', '.')) for m in exclude_models]
-        include_models = include_models and [re.compile('^%s$' % m.replace('*', '.*').replace('?', '.')) for m in include_models]
-
         for appmodel in appmodels:
             appmodel_abstracts = [abstract_model.__name__ for abstract_model in appmodel.__bases__ if hasattr(abstract_model, '_meta') and abstract_model._meta.abstract]
 

From 118784f26f9de377a696d0b405bc8a4f847220e2 Mon Sep 17 00:00:00 2001
From: "German M. Bravo" <german.mb@deipi.com>
Date: Thu, 18 Apr 2013 15:26:57 -0500
Subject: [PATCH] --print-sql fixed for shell_plus (and dubalu tweaks)

---
 django-packages/django_extensions/management/commands/shell_plus.py | 1 +
 1 file changed, 1 insertion(+)

diff --git a/django-packages/django_extensions/management/commands/shell_plus.py b/django-packages/django_extensions/management/commands/shell_plus.py
index 0ab0cdda0b2566fba87acd2409d743a948b70931..fb12bbddcd0bd12d33063d6e5c432f32476d91c3 100644
--- a/django-packages/django_extensions/management/commands/shell_plus.py
+++ b/django-packages/django_extensions/management/commands/shell_plus.py
@@ -64,6 +64,7 @@ class Command(NoArgsCommand):
                         print('Execution time: %.6fs [Database: %s]' % (execution_time, self.db.alias))
                         print("")
 
+            util.CursorWrapper = PrintQueryWrapper
             util.CursorDebugWrapper = PrintQueryWrapper
 
         def run_notebook():

From 1d35b5851831349b66145c3afee1cbdeec576b0b Mon Sep 17 00:00:00 2001
From: "German M. Bravo" <german.mb@deipi.com>
Date: Wed, 25 Sep 2013 19:14:12 -0500
Subject: [PATCH] Removed migrations from django-extensions

---
 django-packages/django_extensions/migrations/0001_empty.py | 17 -----------------
 django-packages/django_extensions/migrations/__init__.py   |  0
 2 files changed, 17 deletions(-)

diff --git a/django-packages/django_extensions/migrations/0001_empty.py b/django-packages/django_extensions/migrations/0001_empty.py
deleted file mode 100644
index e631efd3667b3bb4ca4b7dae93932194bac18a76..0000000000000000000000000000000000000000
--- a/django-packages/django_extensions/migrations/0001_empty.py
+++ /dev/null
@@ -1,17 +0,0 @@
-# -*- coding: utf-8 -*-
-from south.v2 import SchemaMigration
-
-
-class Migration(SchemaMigration):
-
-    def forwards(self, orm):
-        pass
-
-    def backwards(self, orm):
-        pass
-
-    models = {
-
-    }
-
-    complete_apps = ['django_extensions']
diff --git a/django-packages/django_extensions/migrations/__init__.py b/django-packages/django_extensions/migrations/__init__.py
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000

From 7ab22fda65d45b4ef7b0cdeefdfa111e085ad22b Mon Sep 17 00:00:00 2001
From: "German M. Bravo" <german.mb@deipi.com>
Date: Fri, 27 Sep 2013 16:57:06 -0500
Subject: [PATCH] Revert django-extensions imported apps during runscript

---
 django-packages/django_extensions/management/commands/runscript.py | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/django-packages/django_extensions/management/commands/runscript.py b/django-packages/django_extensions/management/commands/runscript.py
index 16a57d0ab281d94c5971531b3cee5847f5639a5c..91ca0c4284559e75e551e801365408f3b0bfad02 100644
--- a/django-packages/django_extensions/management/commands/runscript.py
+++ b/django-packages/django_extensions/management/commands/runscript.py
@@ -110,7 +110,8 @@ class Command(BaseCommand):
             """ find script module which contains 'run' attribute """
             modules = []
             # first look in apps
-            for app in settings.INSTALLED_APPS:
+            from django.db.models import get_apps
+            for app in get_apps():
                 for subdir in subdirs:
                     mod = my_import("%s.%s.%s" % (app, subdir, script))
                     if mod:

From e9d2ff0ab3c6cf51136e3dcfd28167b7b515a4d5 Mon Sep 17 00:00:00 2001
From: "German M. Bravo" <german.mb@deipi.com>
Date: Mon, 4 Nov 2013 15:34:53 -0600
Subject: [PATCH] Django 1.4 minor compatibility issues
 (django.conf.urls.defaults -> django.conf.urls)

---
 django-packages/django_extensions/admin/__init__.py              | 2 +-
 django-packages/django_extensions/conf/app_template/urls.py.tmpl | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/django-packages/django_extensions/admin/__init__.py b/django-packages/django_extensions/admin/__init__.py
index 7564ea65e38a3d87c5df7c3b22f25a8f64c9c8b8..48476becc4c5854dfede6c6112fa268c4be199f4 100644
--- a/django-packages/django_extensions/admin/__init__.py
+++ b/django-packages/django_extensions/admin/__init__.py
@@ -61,7 +61,7 @@ class ForeignKeyAutocompleteAdmin(ModelAdmin):
         try:
             from django.conf.urls import patterns, url
         except ImportError:  # django < 1.4
-            from django.conf.urls.defaults import patterns, url
+            from django.conf.urls import patterns, url
 
         def wrap(view):
             def wrapper(*args, **kwargs):
diff --git a/django-packages/django_extensions/conf/app_template/urls.py.tmpl b/django-packages/django_extensions/conf/app_template/urls.py.tmpl
index 96ef53f2cf4892f748bb4c074e3ca6c1b5628dc7..aa282974cb51bc6ed3f9009d32ef44cf2e4d1151 100644
--- a/django-packages/django_extensions/conf/app_template/urls.py.tmpl
+++ b/django-packages/django_extensions/conf/app_template/urls.py.tmpl
@@ -1,6 +1,6 @@
 try:
     from django.conf.urls import *
 except ImportError:  # django < 1.4
-    from django.conf.urls.defaults import *
+    from django.conf.urls import *
 
 # place app url patterns here
